const svgEl = `
    <svg style="position: relative;top: -19px;left: 14px;" width="256" height="112" viewBox="0 0 256 112">
        <path fill="none" stroke="rgb(132, 83, 227)" stroke-width="1" d="M8,56 C8,33.90861 25.90861,16 48,16 C70.09139,16 88,33.90861 88,56 C88,78.09139 105.90861,92 128,92 C150.09139,92 160,72 160,56 C160,40 148,24 128,24 C108,24 96,40 96,56 C96,72 105.90861,92 128,92 C154,93 168,78 168,56 C168,33.90861 185.90861,16 208,16 C230.09139,16 248,33.90861 248,56 C248,78.09139 230.09139,96 208,96 L48,96 C25.90861,96 8,78.09139 8,56 Z"></path>
    </svg>
`

const svgEl2 = `
    <svg class="line-draw" width="167.773" height="87.207" viewBox="0 0 167.773 87.207" xmlns="http://www.w3.org/2000/svg"><g id="svgGroup" stroke-linecap="round" fill-rule="evenodd" font-size="9pt" stroke="#000" stroke-width="0.25mm" fill="none" style="stroke:#8453E3;stroke-width:0.25mm;fill:none"><path d="M 90.283 84.326 L 82.129 66.358 L 73.389 83.203 Q 72.949 84.033 72.559 84.741 A 6.66 6.66 0 0 1 71.75 85.904 A 6.151 6.151 0 0 1 71.655 86.011 A 3.735 3.735 0 0 1 70.459 86.89 A 3.228 3.228 0 0 1 69.709 87.127 Q 69.369 87.192 68.981 87.204 A 5.76 5.76 0 0 1 68.799 87.207 L 63.184 87.207 A 2.397 2.397 0 0 1 62.662 87.154 Q 62.277 87.068 61.992 86.845 A 1.538 1.538 0 0 1 61.987 86.841 A 1.175 1.175 0 0 1 61.569 86.164 A 1.847 1.847 0 0 1 61.523 85.742 A 2.641 2.641 0 0 1 61.608 85.113 Q 61.756 84.513 62.164 83.75 A 10.564 10.564 0 0 1 62.305 83.496 L 77.539 56.25 L 62.402 22.803 A 8.26 8.26 0 0 1 62.057 21.893 Q 61.908 21.414 61.852 20.98 A 4.01 4.01 0 0 1 61.816 20.459 A 4.218 4.218 0 0 1 61.924 19.477 A 2.658 2.658 0 0 1 62.915 17.92 Q 64.014 17.09 65.186 17.09 L 92.92 17.09 A 7.84 7.84 0 0 1 93.835 17.141 Q 94.299 17.195 94.695 17.309 A 4.179 4.179 0 0 1 94.995 17.408 Q 95.85 17.725 96.411 18.164 A 4.191 4.191 0 0 1 96.925 18.637 A 3.247 3.247 0 0 1 97.29 19.116 Q 97.533 19.509 97.704 19.83 A 7.949 7.949 0 0 1 97.803 20.02 L 103.857 33.399 L 110.205 21.094 A 79.294 79.294 0 0 0 110.837 19.95 A 70.61 70.61 0 0 0 111.035 19.58 A 6.532 6.532 0 0 1 111.682 18.587 A 5.769 5.769 0 0 1 111.938 18.286 A 3.735 3.735 0 0 1 113.135 17.408 A 3.228 3.228 0 0 1 113.885 17.171 Q 114.225 17.105 114.613 17.093 A 5.76 5.76 0 0 1 114.795 17.09 L 120.41 17.09 A 2.703 2.703 0 0 1 120.92 17.135 Q 121.218 17.193 121.453 17.322 A 1.477 1.477 0 0 1 121.655 17.456 A 1.175 1.175 0 0 1 122.074 18.133 A 1.847 1.847 0 0 1 122.119 18.555 A 2.321 2.321 0 0 1 122.042 19.115 Q 121.866 19.816 121.289 20.801 L 108.496 43.701 L 125.684 81.494 A 8.26 8.26 0 0 1 126.029 82.404 Q 126.177 82.884 126.234 83.318 A 4.01 4.01 0 0 1 126.27 83.838 Q 126.27 84.668 125.952 85.303 A 3.489 3.489 0 0 1 125.489 86.011 A 3.019 3.019 0 0 1 125.146 86.353 A 3.601 3.601 0 0 1 124.072 86.988 Q 123.486 87.207 122.9 87.207 L 95.215 87.207 Q 93.945 87.207 93.115 86.89 Q 92.313 86.583 91.761 86.162 A 3.922 3.922 0 0 1 91.724 86.133 A 5.046 5.046 0 0 1 91.217 85.681 A 3.844 3.844 0 0 1 90.82 85.205 A 9.471 9.471 0 0 1 90.585 84.853 Q 90.473 84.676 90.383 84.515 A 4.929 4.929 0 0 1 90.283 84.326 Z M 25.342 17.09 L 32.617 17.09 A 5.933 5.933 0 0 1 33.291 17.126 Q 33.754 17.179 34.131 17.31 A 2.793 2.793 0 0 1 35.073 17.869 A 3.395 3.395 0 0 1 35.278 18.067 Q 35.721 18.53 36.109 19.249 A 8.353 8.353 0 0 1 36.23 19.483 Q 36.67 20.362 37.158 21.631 L 59.57 81.494 Q 59.779 82.079 59.881 82.557 A 5.406 5.406 0 0 1 59.912 82.715 Q 60.01 83.252 60.01 83.789 A 4.652 4.652 0 0 1 59.912 84.774 Q 59.78 85.383 59.469 85.834 A 2.494 2.494 0 0 1 58.96 86.377 A 4.085 4.085 0 0 1 58.001 86.952 A 3.25 3.25 0 0 1 56.738 87.207 L 29.053 87.207 Q 27.783 87.207 26.929 86.89 A 6.804 6.804 0 0 1 26.187 86.566 Q 25.824 86.379 25.527 86.162 A 4.184 4.184 0 0 1 25.488 86.133 A 4.546 4.546 0 0 1 25.027 85.739 Q 24.796 85.512 24.631 85.274 A 2.747 2.747 0 0 1 24.585 85.205 A 4.28 4.28 0 0 1 24.385 84.867 Q 24.295 84.695 24.236 84.536 A 1.979 1.979 0 0 1 24.17 84.326 L 23.633 82.617 L 9.912 82.617 L 9.57 84.082 Q 9.424 84.815 9.229 85.376 A 4.367 4.367 0 0 1 8.986 85.947 A 3.446 3.446 0 0 1 8.74 86.353 A 1.806 1.806 0 0 1 8.089 86.914 A 2.223 2.223 0 0 1 7.935 86.988 Q 7.559 87.149 7.012 87.192 A 5.37 5.37 0 0 1 6.592 87.207 L 1.563 87.207 A 2.934 2.934 0 0 1 0.992 87.157 Q 0 86.959 0 85.987 A 2.835 2.835 0 0 1 0.026 85.617 Q 0.051 85.427 0.1 85.212 A 6.026 6.026 0 0 1 0.171 84.937 Q 0.288 84.517 0.464 83.994 A 32.238 32.238 0 0 1 0.635 83.496 L 21.045 21.729 Q 21.777 19.434 22.705 18.311 Q 23.633 17.188 25.342 17.09 Z M 131.787 80.42 L 131.787 43.994 Q 131.787 42.334 132.08 41.04 A 4.743 4.743 0 0 1 132.516 39.846 A 3.918 3.918 0 0 1 133.203 38.916 A 4.396 4.396 0 0 1 134.192 38.184 Q 134.766 37.866 135.498 37.647 Q 136.963 37.207 139.307 37.207 L 160.693 37.207 A 20.242 20.242 0 0 1 162.014 37.248 Q 162.694 37.292 163.273 37.386 A 8.399 8.399 0 0 1 164.331 37.622 Q 165.593 37.999 166.353 38.716 A 3.622 3.622 0 0 1 166.504 38.867 A 3.917 3.917 0 0 1 167.374 40.36 A 5 5 0 0 1 167.529 40.967 A 12.4 12.4 0 0 1 167.692 42.125 Q 167.773 42.978 167.773 43.994 L 167.773 80.518 A 19.097 19.097 0 0 1 167.727 81.891 Q 167.682 82.515 167.593 83.065 A 10.7 10.7 0 0 1 167.529 83.423 A 4.556 4.556 0 0 1 167.07 84.728 A 4.002 4.002 0 0 1 166.504 85.523 A 4.027 4.027 0 0 1 165.441 86.34 Q 164.976 86.592 164.407 86.769 A 6.985 6.985 0 0 1 164.331 86.792 A 8.492 8.492 0 0 1 163.22 87.037 Q 162.642 87.127 161.965 87.17 A 20.391 20.391 0 0 1 160.693 87.207 L 139.307 87.207 A 20.491 20.491 0 0 1 137.799 87.155 Q 137.087 87.103 136.482 86.997 A 8.604 8.604 0 0 1 135.498 86.768 Q 134.242 86.391 133.453 85.727 A 3.935 3.935 0 0 1 133.203 85.498 A 4.106 4.106 0 0 1 132.209 83.859 A 5.121 5.121 0 0 1 132.08 83.399 Q 131.828 82.308 131.793 80.892 A 18.879 18.879 0 0 1 131.787 80.42 Z M 121.24 81.153 L 94.58 22.803 A 5.351 5.351 0 0 0 94.33 22.296 Q 94.048 21.8 93.736 21.569 A 1.095 1.095 0 0 0 93.506 21.436 Q 92.92 21.192 92.285 21.192 L 89.893 21.192 L 118.018 83.106 L 119.775 83.106 A 2.942 2.942 0 0 0 120.466 83.028 A 2.243 2.243 0 0 0 121.191 82.715 Q 121.75 82.343 121.288 81.259 A 4.484 4.484 0 0 0 121.24 81.153 Z M 55.127 81.397 L 33.154 22.754 A 4.477 4.477 0 0 0 32.948 22.289 Q 32.623 21.662 32.202 21.46 Q 31.771 21.254 30.863 21.206 A 11.259 11.259 0 0 0 30.273 21.192 L 28.564 21.192 L 51.66 83.106 L 54.004 83.106 Q 54.883 83.106 55.2 82.74 A 0.559 0.559 0 0 0 55.319 82.501 Q 55.407 82.142 55.167 81.499 A 4.82 4.82 0 0 0 55.127 81.397 Z M 134.888 9.961 A 15.758 15.758 0 0 0 133.594 16.309 A 15.467 15.467 0 0 0 134.888 22.583 A 16.661 16.661 0 0 0 138.379 27.735 A 16.582 16.582 0 0 0 143.555 31.226 A 15.758 15.758 0 0 0 149.902 32.52 A 15.467 15.467 0 0 0 156.177 31.226 A 16.661 16.661 0 0 0 161.328 27.735 Q 163.525 25.537 164.819 22.583 A 15.467 15.467 0 0 0 166.113 16.309 A 15.758 15.758 0 0 0 164.819 9.961 A 16.582 16.582 0 0 0 161.328 4.785 Q 159.131 2.588 156.177 1.294 A 15.467 15.467 0 0 0 149.902 0 A 15.758 15.758 0 0 0 143.555 1.294 A 16.582 16.582 0 0 0 138.379 4.785 A 16.582 16.582 0 0 0 134.888 9.961 Z M 163.623 79.981 L 163.623 44.434 A 12.92 12.92 0 0 0 163.609 43.805 Q 163.579 43.204 163.49 42.784 A 3.66 3.66 0 0 0 163.477 42.725 A 1.94 1.94 0 0 0 163.318 42.279 A 1.392 1.392 0 0 0 162.891 41.773 Q 162.451 41.455 161.719 41.382 Q 160.986 41.309 159.814 41.309 L 159.814 83.106 A 31.263 31.263 0 0 0 160.504 83.099 Q 161.21 83.083 161.711 83.033 A 8.711 8.711 0 0 0 161.719 83.033 A 3.265 3.265 0 0 0 162.217 82.946 Q 162.613 82.843 162.891 82.642 A 1.446 1.446 0 0 0 163.385 82.001 A 1.972 1.972 0 0 0 163.477 81.714 Q 163.609 81.163 163.622 80.193 A 16.101 16.101 0 0 0 163.623 79.981 Z M 157.959 16.309 Q 157.959 19.727 156.616 22.754 A 16.872 16.872 0 0 1 152.979 28.028 A 11.002 11.002 0 0 0 156.567 26.416 A 12.59 12.59 0 0 0 159.399 23.755 Q 160.596 22.217 161.279 20.313 Q 161.963 18.408 161.963 16.309 Q 161.963 14.209 161.279 12.305 Q 160.596 10.401 159.399 8.863 A 12.131 12.131 0 0 0 156.567 6.226 A 12.184 12.184 0 0 0 152.979 4.59 A 16.872 16.872 0 0 1 156.616 9.864 Q 157.959 12.891 157.959 16.309 Z M 16.553 57.52 L 11.426 76.612 L 21.973 76.612 L 16.553 57.52 Z" vector-effect="non-scaling-stroke"/></g></svg>
`

const motionPathCode = `new Axi({
    targets: '.motion-path' + box,
    translateX: path('x'),
    translateY: path('y'),
    rotate: path('angle'),
    easing: 'linear',
    duration: 2000,
    loop: true
})`

let motionPathAxi
console.log(Axi.setPathDashArray, 's333')

addDemos(
    { id: 'svg', title: 'SVG', color: 'purple' },
    [
        { 
            id: 'motionPath', 
            cls: 'motion-path', 
            title: 'MOTION-PATH', 
            count: 1, 
            extra: svgEl, 
            color: 'rgb(132, 83, 227)', 
            code: motionPathCode, 
            click() {
                if (motionPathAxi) {
                    resetRunningDemo(motionPathAxi)
                    motionPathAxi.restart()
                    return
                }

                const path = Axi.getMotionPath('path')

                motionPathAxi = new Axi({
                    targets: '.motion-path .sprite',
                    translateX: path('x'),
                    translateY: path('y'),
                    rotate: path('angle'),
                    easing: 'linear',
                    duration: 2000,
                    loop: true,
                })
                resetRunningDemo(motionPathAxi)
            } 
        },
        { 
            id: 'line-drawing', 
            cls: 'line-drawling', 
            title: 'LINE DRAWING', 
            count: 0, 
            extra: svgEl2, 
            axiParams: [
                {
                    targets: '.line-draw path',
                    strokeDashoffset: [ Axi.setPathDashArray, 0 ],
                    easing: 'easeInOutSine',
                    duration: 1500,
                    delay: function(el, i) { return i * 250 },
                    direction: 'alternate',
                    loop: true
                }
            ]
        },
    ]
)
